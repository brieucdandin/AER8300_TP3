package hardware
public

	device Watchdog
		features
			test: in data port;
			reset: out data port Standard::Boolean;
		flows
			fl_in: flow source test {latency => 1ms .. 2ms;};
			fl_out: flow sink test {latency => 1ms .. 2ms;};
	end Watchdog;

	device SunSensor
		features
			rot_x_b1: out data port;
			rot_y_b1: out data port;
			rot_z_b1: out data port;
		    comm1: requires bus access CommBus1;
			rot_x_b2: out data port;
			rot_y_b2: out data port;
			rot_z_b2: out data port;
		    comm2: requires bus access CommBus2;
	 	flows
			fx1: flow source rot_x_b1 {latency => 1ms .. 2ms;};
			fy1: flow source rot_y_b1 {latency => 1ms .. 2ms;};
			fz1: flow source rot_z_b1 {latency => 1ms .. 2ms;};
			fx2: flow source rot_x_b2 {latency => 1ms .. 2ms;};
			fy2: flow source rot_y_b2 {latency => 1ms .. 2ms;};
			fz2: flow source rot_z_b2 {latency => 1ms .. 2ms;};
	end SunSensor;
	
	device GPSReceiver
		features
			pos_x_b1: out data port;
			pos_y_b1: out data port;
			pos_z_b1: out data port;
			comm1: requires bus access CommBus1;
			pos_x_b2: out data port;
			pos_y_b2: out data port;
			pos_z_b2: out data port;
		    comm2: requires bus access CommBus2;
		flows
			fx1: flow source pos_x_b1 {latency => 3ms .. 5ms;};
			fy1: flow source pos_y_b1 {latency => 3ms .. 5ms;};
			fz1: flow source pos_z_b1 {latency => 3ms .. 5ms;};
			fx2: flow source pos_x_b2 {latency => 3ms .. 5ms;};
			fy2: flow source pos_y_b2 {latency => 3ms .. 5ms;};
			fz2: flow source pos_z_b2 {latency => 3ms .. 5ms;};
	end GPSReceiver;
	
	
	device Thruster
		features
			thu_a_b1: in data port thrust;
			thu_b_b1: in data port thrust;
			thu_c_b1: in data port thrust;
			comm1: requires bus access CommBus1;
			thu_a_b2: in data port thrust;
			thu_b_b2: in data port thrust;
			thu_c_b2: in data port thrust;
			comm2: requires bus access CommBus2;
		flows
			fa1: flow sink thu_a_b1 {latency => 1ms .. 2ms;};
			fb1: flow sink thu_b_b1 {latency => 1ms .. 2ms;};
			fc1: flow sink thu_c_b1 {latency => 1ms .. 2ms;};
			fa2: flow sink thu_a_b2 {latency => 1ms .. 2ms;};
			fb2: flow sink thu_b_b2 {latency => 1ms .. 2ms;};
			fc2: flow sink thu_c_b2 {latency => 1ms .. 2ms;};
	end Thruster;
	
	device ReactionWheel
		features
			ang_x_b1: in data port radians;
			ang_y_b1: in data port radians;
			ang_z_b1: in data port radians;
			comm1: requires bus access CommBus1;
			ang_x_b2: in data port radians;
			ang_y_b2: in data port radians;
			ang_z_b2: in data port radians;
			comm2: requires bus access CommBus2;
		flows
			fx1: flow sink ang_x_b1 {latency => 1ms .. 2ms;};
			fy1: flow sink ang_y_b1 {latency => 1ms .. 2ms;};
			fz1: flow sink ang_z_b1 {latency => 1ms .. 2ms;};
			fx2: flow sink ang_x_b2 {latency => 1ms .. 2ms;};
			fy2: flow sink ang_y_b2 {latency => 1ms .. 2ms;};
			fz2: flow sink ang_z_b2 {latency => 1ms .. 2ms;};
	end ReactionWheel;
	
	device Computer
		features
			reset: in data port Standard::Boolean;
			to_watchdog: out data port;
			
			rot_x_b1_in: in data port;
			rot_y_b1_in: in data port;
			rot_z_b1_in: in data port;
			rot_x_b2_in: in data port;
			rot_y_b2_in: in data port;
			rot_z_b2_in: in data port;
			
			rot_x_b1_out: out data port;
			rot_y_b1_out: out data port;
			rot_z_b1_out: out data port;
			rot_x_b2_out: out data port;
			rot_y_b2_out: out data port;
			rot_z_b2_out: out data port;
			
			pos_x_b1_in: in data port;
			pos_y_b1_in: in data port;
			pos_z_b1_in: in data port;
			pos_x_b2_in: in data port;
			pos_y_b2_in: in data port;
			pos_z_b2_in: in data port;
			
			pos_x_b1_out: out data port;
			pos_y_b1_out: out data port;
			pos_z_b1_out: out data port;
			pos_x_b2_out: out data port;
			pos_y_b2_out: out data port;
			pos_z_b2_out: out data port;
			
			thu_a_b1_in: in data port thrust;
			thu_b_b1_in: in data port thrust;
			thu_c_b1_in: in data port thrust;
			thu_a_b2_in: in data port thrust;
			thu_b_b2_in: in data port thrust;
			thu_c_b2_in: in data port thrust;
			
			thu_a_b1_out: out data port thrust;
			thu_b_b1_out: out data port thrust;
			thu_c_b1_out: out data port thrust;
			thu_a_b2_out: out data port thrust;
			thu_b_b2_out: out data port thrust;
			thu_c_b2_out: out data port thrust;
			
			ang_x_b1_in: in data port radians;
			ang_y_b1_in: in data port radians;
			ang_z_b1_in: in data port radians;
			ang_x_b2_in: in data port radians;
			ang_y_b2_in: in data port radians;
			ang_z_b2_in: in data port radians;
			
			ang_x_b1_out: out data port radians;
			ang_y_b1_out: out data port radians;
			ang_z_b1_out: out data port radians;
			ang_x_b2_out: out data port radians;
			ang_y_b2_out: out data port radians;
			ang_z_b2_out: out data port radians;
			
			comm1: requires bus access CommBus1;
			comm2: requires bus access CommBus2;
	end Computer;
	
end hardware;
